// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderService.Models;

#nullable disable

namespace OrderService.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderService.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderService.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("OrderService.Models.OrderOutbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderOutbox");
                });

            modelBuilder.Entity("OrderService.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "T-Shirt",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 2,
                            Name = "Suit",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cap",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 4,
                            Name = "Belt",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gloves",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sweater",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bra",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 8,
                            Name = "Boots",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 9,
                            Name = "Jumper",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 10,
                            Name = "Sockets",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 11,
                            Name = "Jeans",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 12,
                            Name = "Dress",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 13,
                            Name = "Towel",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 14,
                            Name = "Tie",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 15,
                            Name = "Shoes",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 16,
                            Name = "Sandal",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 17,
                            Name = "Oxford shoe",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 18,
                            Name = "Brogue shoe",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 19,
                            Name = "Platform shoe",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 20,
                            Name = "Clog",
                            PricePerUnit = 1000m,
                            Quantity = 30
                        });
                });

            modelBuilder.Entity("OrderService.Models.OrderItem", b =>
                {
                    b.HasOne("OrderService.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderService.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OrderService.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("OrderService.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
